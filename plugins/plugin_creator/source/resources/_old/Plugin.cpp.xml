<templates type="mustache">
    <template name="Plugin.cpp">
        <config id="Plugin.cpp" name="Plugin Src">

        </config>
        <content>
            <![CDATA[
#include <base/QzAppContext.h>

#include <core/ext/IExtensionAdapter.h>

#include "Plugin.h"

namespace Quartz { namespace Ext { namespace {{PLUGIN_NAMESPACE}} {

const QString Plugin::PLUGIN_ID{ "{{PLUGIN_ID}}" };
const QString Plugin::PLUGIN_NAME{ "{{PLUGIN_DISPLAY_NAME}}" };

struct Plugin::Data
{
    AdapterList m_adapters;
    ExtensionList m_extensions;
    DependencyList m_dependencies;
};

Plugin::Plugin()
    : Quartz::Ext::Plugin(PLUGIN_ID, PLUGIN_NAME)
    , m_data(std::make_unique<Data>())
{

}

Plugin::~Plugin()
{

}

const ExtensionList & Plugin::extensions() const
{
    return m_data->m_extensions;
}


const DependencyList & Plugin::dependencies() const
{
    return m_data->m_dependencies;
}

const AdapterList & Plugin::adapters() const
{
    return m_data->m_adapters;
}


} } }
            ]]>
        </content>
    </template>
</templates>
